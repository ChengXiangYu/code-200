#### prepare

+ [] [C Programming Language, Vol 2](https://www.amazon.com/Programming-Language-Brian-W-Kernighan/dp/0131103628)

+ [] [think in java](#)





#### daily plan



+ C - using structs and functions that take a struct * and something else as args.

+ java without using built-in types

+ python using build-in types







#### **ABC** **master java** **know thy complexities** **re-invent wheel** **solve word problems** 



+ [] [Know Thy Complexities.](http://bigocheatsheet.com/)

+ [] [A Gentle Introduction to Algorithm Complexity Analysis](http://discrete.gr/complexity/)

+ [] implement the common data structures.

    - [] java Collection

    - [] C data structures.

    - [] python data structures.

+ [] [data-science](https://www.topcoder.com/community/data-science/data-science-tutorials/)

+ [] [data practice](https://community.topcoder.com/tc?module=MatchList)

+ [] [Computer Architecture, Fifth Edition: A Quantitative Approach](https://www.amazon.com/dp/012383872X/)

+ [] [Data Structures and Algorithms in Java](https://www.amazon.com/Data-Structures-Algorithms-Michael-Goodrich/dp/1118771338/)



#### Algorithmic complexity / Big-O / Asymptotic analysis



#### Data Structures



* Arrays



* Linked Lists



* Stack



* Queue



* Hash table



#### More Knowledge



* Binary search

* Bitwise operations



#### Trees



* Trees - Notes & Background

* Binary search trees: BSTs

* Heap / Priority Queue / Binary Heap



#### Sorting



#### Graphs





#### Even More Knowledge



* Recursion

* Dynamic Programming

* Object-Oriented Programming

* Design patterns

* Combinatorics (n choose k) & Probability

* NP, NP-Complete and Approximation Algorithms

* Caches

* Processes and Threads

* Testing

* Scheduling

* Papers

* Implement system routines

* String searching & manipulations

* Tries

* Floating Point Numbers

* Unicode

* Endianness

* Networking



#### System Design, Scalability, Data Handling



#### Final Review



#### Coding Question Practice



#### Coding exercises/challenges



#### Additional Books



* The Unix Programming Environment

* The Linux Command Line: A Complete Introduction

* TCP/IP Illustrated Series

* Head First Design Patterns

* Design Patterns: Elements of Reusable Object-Oriente鈥媎 Software

* UNIX and Linux System Administration Handbook, 4th Edition

#### additional learning

#### Additional Detail on Some Subjects

#### Video Series